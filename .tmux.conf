# 引入颜色配置
source-file ~/.tmux.conf.d/colors.conf

################################ Plugins ################################
# 插件管理器
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-cpu'

# 启动 tpm
run '~/.tmux/plugins/tpm/tpm'

################################ Themes ################################
# 启用 256 色支持
set-option -sa terminal-overrides ",xterm*:Tc"
set-option -sa terminal-features ',xterm-kitty:RGB'
# set -g default-terminal "tmux-256color"
# set-option -sa terminal-overrides ",xterm*:Tc"
# set-option -sa terminal-features ',xterm-kitty:RGB'

# 状态栏配置
set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right ""

# 设置图标
SESSION_ICON="SESSION:"
# 设置前景色，根据前缀键状态改变颜色
SESSION_COLOR="#{?client_prefix,#[fg=red],#[fg=blue]}"
# 设置文本，显示当前会话 ID
SESSION_TEXT="#S"

# 将模块添加到右侧状态栏
set -g status-right '#{cpu_fg_color}󰻠 #{cpu_percentage} #{ram_fg_color}󰍛 #{ram_percentage} '${SESSION_COLOR}${SESSION_ICON}${SESSION_TEXT}''
# set -g status-right "#(echo  '${SESSION_COLOR}${SESSION_ICON}${SESSION_TEXT}')"

# 主题配置
set-option -g status-position top
# 状态栏背景色
set -g status-style 'bg=None,fg=#{@on_surface}'

# 窗格边框颜色
set -g pane-border-style 'fg=#585b70'
# 活动窗格边框颜色
set -g pane-active-border-style 'fg=#B4BEFF'

# 窗口状态配置
set -g window-status-format '#[fg=#89b4fa] #{window_index} #W#{?window_zoomed_flag, 󰁌 , }'
set -g window-status-current-format ''${SESSION_COLOR}' [#{window_index} #W#{?window_zoomed_flag, 󰁌 ,}]'

# 窗格边框状态
setw -g pane-border-status top
# set -g pane-border-format "[${SESSION_COLOR}#{?pane_active,#[bold],} #P #[fg=default,nobold]]"
set -g pane-border-format "[#{?pane_active,${SESSION_COLOR},#[fg=default]} #P #[fg=default,nobold]]"
setw -g pane-border-lines heavy

# Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
set-hook -g 'after-new-session'  'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi"'

# 命令行和消息样式
set -g message-command-style 'bg=#1e1e2e,fg=#cdd6f4'
set -g message-style 'bg=#1e1e2e,fg=#cdd6f4'

# 复制模式样式
set -g mode-style 'bg=#45475a,fg=#cdd6f4'

set -g cursor-style bar

################################ Options ################################
# 从1开始计数
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
# 启动鼠标控制
set -g mouse on
# 启用 vi 模式
set-window-option -g mode-keys vi
# 更流畅的 escape 键
set -sg escape-time 0
# 更响应的窗格切换
set -sg repeat-time 0

# 启用终端标题同步
set -g set-titles on
set -g set-titles-string "#T"
setw -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# 终端光标形状在退出nivm后改变
# set -g terminal-overrides '*:Se=\e[1 q'
# set -g terminal-overrides '*:Ss=\E[6 q:Se=\E2 q'
# set -g terminal-overrides ",xterm-kitty:RGB,*:Ss=\033[6 q"
# set -as terminal-features 'xterm-kitty:cstyle'

################################ KeyBindings ################################
# 解除默认前缀键绑定
unbind C-b
# 设置新的前缀键为 C-]
set -g prefix C-]
bind C-] send-prefix
# 解除并重新绑定水平和垂直分屏快捷键
unbind %
bind | split-window -h # 使用 | 竖屏
unbind '"'
bind - split-window -v # 使用 - 横屏

# 复制模式键绑定
bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# 重新加载 tmux 配置文件
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."
# 切换到上一个 pane 并将其最大化 (Zoom)
bind-key Z select-pane -l \; resize-pane -Z

run-shell ~/.tmux/plugins/tmux-cpu/cpu.tmux
